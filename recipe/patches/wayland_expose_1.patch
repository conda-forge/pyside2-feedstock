From 1b6ff56e206e721dce592dbf4d47f82151d55e1e Mon Sep 17 00:00:00 2001
From: Friedemann Kleint <Friedemann.Kleint@qt.io>
Date: Fri, 01 Aug 2025 08:16:19 +0200
Subject: [PATCH] Move native interfaces out of the QtGui type system file

It is bound to grow as more interfaces with more modifications
are added.

Rename the code snippet used for int conversion.
Also add a test for X11.

Task-number: PYSIDE-2787
Change-Id: Ia5f5cf7f0fbb551c38367d80e9fdb4b004db9085
Reviewed-by: Shyamnath Premnadh <Shyamnath.Premnadh@qt.io>
---

diff --git a/build_scripts/wheel_files.py b/build_scripts/wheel_files.py
index d7ccc70..174e785 100644
--- a/build_scripts/wheel_files.py
+++ b/build_scripts/wheel_files.py
@@ -330,6 +330,7 @@
     _typesystems = [
         "gui_common.xml",
         "typesystem_gui_common.xml",
+        "typesystem_gui_nativeinterface.xml",
         "typesystem_gui_mac.xml",
         "typesystem_gui_win.xml",
         "typesystem_gui_x11.xml",
diff --git a/sources/pyside6/PySide6/QtGui/typesystem_gui.xml b/sources/pyside6/PySide6/QtGui/typesystem_gui.xml
index 8589894..2038f96 100644
--- a/sources/pyside6/PySide6/QtGui/typesystem_gui.xml
+++ b/sources/pyside6/PySide6/QtGui/typesystem_gui.xml
@@ -15,6 +15,7 @@
     <?if unix !darwin?>
     <load-typesystem name="QtGui/typesystem_gui_x11.xml" generate="yes"/>
     <?endif?>
+    <load-typesystem name="QtGui/typesystem_gui_nativeinterface.xml" generate="yes"/>
     <load-typesystem name="QtGui/typesystem_gui_common.xml" generate="yes"/>
     <load-typesystem name="QtGui/typesystem_gui_rhi.xml" generate="yes"/>
 </typesystem>
diff --git a/sources/pyside6/PySide6/QtGui/typesystem_gui_common.xml b/sources/pyside6/PySide6/QtGui/typesystem_gui_common.xml
index 32a665e..9f521a0 100644
--- a/sources/pyside6/PySide6/QtGui/typesystem_gui_common.xml
+++ b/sources/pyside6/PySide6/QtGui/typesystem_gui_common.xml
@@ -2836,31 +2836,6 @@
     </modify-function>
   </object-type>
 
-  <namespace-type name="QNativeInterface" private="yes" since="6.7">
-      <object-type name="QX11Application" private="yes" disable-wrapper="yes"
-                   force-abstract="yes">
-          <configuration condition="QT_CONFIG(xcb)"/>
-          <modify-function signature="display()const">
-              <modify-argument index="return">
-                  <replace-type modified-type="int"/>
-              </modify-argument>
-              <inject-code class="target" position="end" file="../glue/qtgui.cpp"
-                           snippet="qx11application-resource-ptr"/>
-          </modify-function>
-          <modify-function signature="connection()const">
-              <modify-argument index="return">
-                  <replace-type modified-type="int"/>
-              </modify-argument>
-              <inject-code class="target" position="end" file="../glue/qtgui.cpp"
-                           snippet="qx11application-resource-ptr"/>
-          </modify-function>
-      </object-type>
-      <object-type name="QWindowsScreen" private="yes" disable-wrapper="yes"
-                   force-abstract="yes">
-          <configuration condition="#ifdef Q_OS_WIN"/>
-      </object-type>
-  </namespace-type>
-
   <object-type name="QOpenGLContext">
     <enum-type name="OpenGLModuleType"/>
   </object-type>
diff --git a/sources/pyside6/PySide6/QtGui/typesystem_gui_nativeinterface.xml b/sources/pyside6/PySide6/QtGui/typesystem_gui_nativeinterface.xml
new file mode 100644
index 0000000..3965c72
--- /dev/null
+++ b/sources/pyside6/PySide6/QtGui/typesystem_gui_nativeinterface.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+// Copyright (C) 2025 The Qt Company Ltd.
+// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR LGPL-3.0-only OR GPL-2.0-only OR GPL-3.0-only
+
+It is not possible to split this per platform since all type entries need to be
+known for the code snippets of QGuiApplication::nativeInterface() and similar.
+-->
+
+<typesystem package="PySide6.QtGui">
+    <namespace-type name="QNativeInterface" private="yes" since="6.7">
+        <object-type name="QX11Application" private="yes" disable-wrapper="yes"
+                     force-abstract="yes">
+            <configuration condition="QT_CONFIG(xcb)"/>
+            <modify-function signature="display()const">
+                <modify-argument index="return">
+                    <replace-type modified-type="int"/>
+                </modify-argument>
+                <inject-code class="target" position="end" file="../glue/qtgui.cpp"
+                             snippet="native-resource-ptr"/>
+            </modify-function>
+            <modify-function signature="connection()const">
+                <modify-argument index="return">
+                    <replace-type modified-type="int"/>
+                </modify-argument>
+                <inject-code class="target" position="end" file="../glue/qtgui.cpp"
+                             snippet="native-resource-ptr"/>
+            </modify-function>
+        </object-type>
+        <object-type name="QWindowsScreen" private="yes" disable-wrapper="yes"
+                     force-abstract="yes">
+            <configuration condition="#ifdef Q_OS_WIN"/>
+        </object-type>
+    </namespace-type>
+</typesystem>
diff --git a/sources/pyside6/PySide6/glue/qtgui.cpp b/sources/pyside6/PySide6/glue/qtgui.cpp
index 72d3d2b..b394c4a 100644
--- a/sources/pyside6/PySide6/glue/qtgui.cpp
+++ b/sources/pyside6/PySide6/glue/qtgui.cpp
@@ -934,10 +934,11 @@
 }
 // @snippet qscreen-nativeInterface
 
-// @snippet qx11application-resource-ptr
+// Return 'int' from native interface's forward-declared structs like Display*
+// @snippet native-resource-ptr
  auto *resource = %CPPSELF.%FUNCTION_NAME();
 %PYARG_0 = PyLong_FromVoidPtr(resource);
-// @snippet qx11application-resource-ptr
+// @snippet native-resource-ptr
 
 // @snippet qwindow-fromWinId
 WId id = %1;
diff --git a/sources/pyside6/tests/QtGui/CMakeLists.txt b/sources/pyside6/tests/QtGui/CMakeLists.txt
index fb0df14..c8ac4c4 100644
--- a/sources/pyside6/tests/QtGui/CMakeLists.txt
+++ b/sources/pyside6/tests/QtGui/CMakeLists.txt
@@ -19,6 +19,7 @@
 PYSIDE_TEST(deepcopy_test.py)
 PYSIDE_TEST(event_filter_test.py)
 PYSIDE_TEST(float_to_int_implicit_conversion_test.py)
+PYSIDE_TEST(nativeinterface_test.py)
 PYSIDE_TEST(qbrush_test.py)
 PYSIDE_TEST(qcolor_test.py)
 PYSIDE_TEST(qcolor_reduce_test.py)
diff --git a/sources/pyside6/tests/QtGui/nativeinterface_test.py b/sources/pyside6/tests/QtGui/nativeinterface_test.py
new file mode 100644
index 0000000..612422a
--- /dev/null
+++ b/sources/pyside6/tests/QtGui/nativeinterface_test.py
@@ -0,0 +1,29 @@
+# Copyright (C) 2025 The Qt Company Ltd.
+# SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only WITH Qt-GPL-exception-1.0
+
+import os
+import sys
+import unittest
+
+from pathlib import Path
+sys.path.append(os.fspath(Path(__file__).resolve().parents[1]))
+from init_paths import init_test_paths  # noqa: E402
+init_test_paths(False)
+
+from PySide6.QtGui import QGuiApplication, QNativeInterface  # noqa
+from helper.usesqapplication import UsesQApplication  # noqa: E402
+
+
+class TestNativeInterface(UsesQApplication):
+
+    @unittest.skipUnless(sys.platform == "linux", "Linux only")
+    def testLinuxNativeApplication(self):
+        app = qApp  # noqa: F821
+        native_app = app.nativeInterface()
+        if native_app:
+            if issubclass(type(native_app), QNativeInterface.QX11Application):
+                self.assertTrue(native_app.display() != 0)
+
+
+if __name__ == '__main__':
+    unittest.main()
