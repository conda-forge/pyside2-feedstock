From 67b846f2284851071c9d492101af2d57820c9aab Mon Sep 17 00:00:00 2001
From: Mark Harfouche <mark.harfouche@gmail.com>
Date: Sun, 5 Jan 2025 23:27:47 -0500
Subject: [PATCH] Try to add qt wayland shims

---
 sources/pyside6/PySide6/QtGui/CMakeLists.txt   |  9 ++++++++-
 .../PySide6/QtGui/typesystem_gui_common.xml    | 18 ++++++++++++++++++
 sources/pyside6/PySide6/glue/qtgui.cpp         | 11 +++++++++++
 3 files changed, 37 insertions(+), 1 deletion(-)

diff --git a/sources/pyside6/PySide6/QtGui/CMakeLists.txt b/sources/pyside6/PySide6/QtGui/CMakeLists.txt
index 33f5c0d88..b6b6c6896 100644
--- a/sources/pyside6/PySide6/QtGui/CMakeLists.txt
+++ b/sources/pyside6/PySide6/QtGui/CMakeLists.txt
@@ -291,7 +291,14 @@ get_property(QtGui_enabled_features TARGET Qt${QT_MAJOR_VERSION}::Gui
 if("xcb" IN_LIST QtGui_enabled_features)
     list(APPEND QtGui_SRC
          ${QtGui_GEN_DIR}/qnativeinterface_qx11application_wrapper.cpp)
-elseif(WIN32)
+endif()
+
+if("wayland" IN_LIST QtGui_enabled_features)
+    list(APPEND QtGui_SRC
+         ${QtGui_GEN_DIR}/qnativeinterface_qwaylandapplication_wrapper.cpp)
+endif()
+
+if(WIN32)
     list(APPEND QtGui_SRC
          ${QtGui_GEN_DIR}/qnativeinterface_qwindowsscreen_wrapper.cpp)
 endif()
diff --git a/sources/pyside6/PySide6/QtGui/typesystem_gui_common.xml b/sources/pyside6/PySide6/QtGui/typesystem_gui_common.xml
index 6a38cd5ee..b2e0605c3 100644
--- a/sources/pyside6/PySide6/QtGui/typesystem_gui_common.xml
+++ b/sources/pyside6/PySide6/QtGui/typesystem_gui_common.xml
@@ -2677,6 +2677,24 @@
                            snippet="qx11application-resource-ptr"/>
           </modify-function>
       </object-type>
+      <object-type name="QWaylandApplication" private="yes" disable-wrapper="yes"
+                   force-abstract="yes">
+          <configuration condition="QT_CONFIG(wayland)"/>
+          <modify-function signature="display()const">
+              <modify-argument index="return">
+                  <replace-type modified-type="int"/>
+              </modify-argument>
+              <inject-code class="target" position="end" file="../glue/qtgui.cpp"
+                           snippet="qwaylandapplication-resource-ptr"/>
+          </modify-function>
+          <modify-function signature="connection()const">
+              <modify-argument index="return">
+                  <replace-type modified-type="int"/>
+              </modify-argument>
+              <inject-code class="target" position="end" file="../glue/qtgui.cpp"
+                           snippet="qwaylandapplication-resource-ptr"/>
+          </modify-function>
+      </object-type>
       <object-type name="QWindowsScreen" private="yes" disable-wrapper="yes"
                    force-abstract="yes">
           <configuration condition="#ifdef Q_OS_WIN"/>
diff --git a/sources/pyside6/PySide6/glue/qtgui.cpp b/sources/pyside6/PySide6/glue/qtgui.cpp
index a91478c55..ffb596199 100644
--- a/sources/pyside6/PySide6/glue/qtgui.cpp
+++ b/sources/pyside6/PySide6/glue/qtgui.cpp
@@ -792,6 +792,12 @@ if (auto *x11App = %CPPSELF.nativeInterface<QNativeInterface::QX11Application>()
     %PYARG_0 = %CONVERTTOPYTHON[QNativeInterface::QX11Application*](x11App);
 }
 #endif
+#if QT_CONFIG(wayland)
+if (auto *waylandApp = %CPPSELF.nativeInterface<QNativeInterface::QWaylandApplication>()) {
+    hasNativeApp = true;
+    %PYARG_0 = %CONVERTTOPYTHON[QNativeInterface::QWaylandApplication*](waylandApp);
+}
+#endif
 if (!hasNativeApp) {
     Py_INCREF(Py_None);
     %PYARG_0 = Py_None;
@@ -823,6 +829,11 @@ if (!hasNativeScreen) {
 %PYARG_0 = PyLong_FromVoidPtr(resource);
 // @snippet qx11application-resource-ptr
 
+// @snippet qwaylandapplication-resource-ptr
+auto *waylandResource = %CPPSELF.%FUNCTION_NAME();
+%PYARG_0 = PyLong_FromVoidPtr(waylandResource);
+// @snippet qwaylandapplication-resource-ptr
+
 // @snippet qwindow-fromWinId
 WId id = %1;
 %RETURN_TYPE retval = %CPPSELF.%FUNCTION_NAME(id);
-- 
2.47.1

